name: Build Dolphin Emulator
on: [push, pull_request]

env:
  build_type: Release
  visual_studio_version: 16

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Update Submodules
        run: |
          git submodule init
          git submodule update
          
      - name: Install dependencies
        run: choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64" "--ignore-package-exit-codes"
      
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install Qt
        run: |
          Invoke-WebRequest -OutFile qt-installer.exe https://download.qt.io/official_releases/qt/5.15/5.15.2/qt-opensource-windows-x86-5.15.2.exe
          Start-Process qt-installer.exe -ArgumentList '--verbose --script qt-installer-noninteractive.qs' -NoNewWindow -Wait

      - name: Set QT_DIR environment variable
        run: echo "QT_DIR=${env:ProgramFiles}/Qt/5.15.2/msvc2019_64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Build with MSBuild
        run: |
          mkdir build
          cd build
          $msbuildPath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin\MSBuild.exe"
          & "${msbuildPath}" ../Source/dolphin-emu.sln /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v143
        shell: pwsh

      - name: Bundle Qt libraries
        run: |
          & "${env:QT_DIR}/bin/windeployqt.exe" --no-opengl-sw Build/Dolphin/Dolphin.exe
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: Build/
